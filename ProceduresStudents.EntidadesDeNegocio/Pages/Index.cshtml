@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Procedure Requested</title>

    <style>
        body {
            font-family: 'Calibri', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f5f5f5;
            color: #fff;
        }

        header {
            background-color: #00537c;
            color: #fff;
            padding: 20px;
            text-align: center;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        nav {
            display: flex;
            justify-content: center;
            margin-top: 10px;
        }

            nav a {
                margin: 0 15px;
                text-decoration: none;
                color: #fff;
                font-weight: bold;
                transition: color 0.3s;
            }

                nav a:hover {
                    color: #ecf0f1;
                }

        #logo {
            text-align: center;
        }

            #logo img {
                max-height: 150px;
                margin-bottom: 10px;
            }

            #logo h1 {
                margin: 0;
                font-family: 'Arial', sans-serif;
                font-size: 24px;
            }

        main {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            background-color: #fff;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
        }

        ul {
            list-style-type: none;
            padding: 0;
        }

        li {
            border: 1px solid #ddd;
            margin-bottom: 15px;
            padding: 15px;
            background-color: #f8f9fa;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            align-items: flex-start;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            transition: transform 0.3s, box-shadow 0.3s;
        }

            li:hover {
                transform: scale(1.02);
                box-shadow: 0 0 15px rgba(0, 123, 255, 0.5);
            }

        label {
            margin-top: 10px;
            color: #333;
            font-weight: bold;
        }

        button {
            padding: 12px 20px;
            background-color: #00537c;
            color: #fff;
            border: none;
            cursor: pointer;
            transition: background-color 0.3s, transform 0.2s;
            border-radius: 4px;
        }

            button:hover {
                background-color: #003366;
                transform: scale(1.05);
            }

        input[type="checkbox"] {
            margin-right: 10px;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background-color: #fff;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            max-width: 400px;
            margin: 0 auto;
            text-align: left;
        }

        .modal-title {
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 10px;
            color: #000; /* Cambiado a negro */
            text-align: center;
        }

        .close {
            cursor: pointer;
            position: absolute;
            top: 5px;
            right: 15px;
            font-size: 18px;
            color: #888;
        }

        form {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        select,
        input {
            margin-bottom: 15px;
            padding: 10px;
            width: 100%;
        }
    </style>
</head>

<body>
    <header>
        <div id="logo">
            <img src="https://www.esfe.agape.edu.sv/img/logos/esfe.png" alt="Institution Logo">
            <h1>Procedure Requested</h1>
        </div>
    </header>
    <main>
        <ul id="procedureList"></ul>

        <div id="myModal" class="modal">
            <div class="modal-content">
                <span class="close" onclick="closeModal()">&times;</span>
                <h2 class="modal-title">Procedure Requested</h2>
                <form id="detailsForm">
                    <input type="hidden" id="procedureIndex" name="procedureIndex" value="">
                    <label for="name">Name:</label>
                    <input type="text" id="name" name="name" required>

                    <label for="student">Student:</label>
                    <input type="text" id="student" name="student" required>

                    <label for="deliveryDate">Delivery Date:</label>
                    <input type="date" id="deliveryDate" name="deliveryDate" required>

                    <label for="status">Status:</label>
                    <select id="status" name="status" required>
                        <option value="Pending">Pending</option>
                        <option value="In Progress">In Progress</option>
                        <option value="Delivered">Delivered</option>
                        <option value="Cancelled">Cancelled</option>
                    </select>

                    <button type="button" onclick="saveDetails()">Save Details</button>
                </form>
            </div>
        </div>

        <!-- Agrega este botón en la sección que desees -->
        <button onclick="redirectToNewPage()">Go to New Page</button>


        <script>
            const procedures = [
                { id: 1, type: 'Certificate of active student', time: 'After 2 business days', checked: false },
                { id: 2, type: 'Conduct certification', time: 'After 2 business days', checked: false },
                { id: 3, type: 'Grade certificate', time: 'After 2 business days', checked: false },
                { id: 4, type: 'Grade history', time: 'Within 1 business day', checked: false },
                { id: 5, type: 'Grade certification', time: 'After 6 business days', checked: false },
                { id: 6, type: 'Technical title replacement', time: 'After 30 business days', checked: false },
                { id: 7, type: 'Graduates certificate', time: 'After 2 business days', checked: false }
            ];

            function showProcedures() {
                const procedureList = document.getElementById('procedureList');
                procedureList.innerHTML = '';

                procedures.forEach((procedure, index) => {
                    const li = document.createElement('li');
                    li.innerHTML = `
                                                                        <input type="checkbox" id="checkbox${index}" ${procedure.checked ? 'checked' : ''} onchange="updateCheckbox(${index})">
                                                                        <label for="checkbox${index}"><strong>${procedure.type}</strong> - Estimated time: ${procedure.time}</label>
                                                                        <button onclick="viewDetails(${index})">View Details</button>
                                                                    `;
                    procedureList.appendChild(li);
                });
            }

            function viewDetails(index) {
                const modal = document.getElementById('myModal');
                modal.style.display = 'flex';

                const procedure = procedures[index];
                document.getElementById('procedureIndex').value = index;
                document.getElementById('name').value = procedure.type;
                document.getElementById('student').value = '';
                document.getElementById('deliveryDate').value = '';
                document.getElementById('status').value = 'Pending';
            }

            function closeModal() {
                const modal = document.getElementById('myModal');
                modal.style.display = 'none';
            }

            function saveDetails() {
                const index = document.getElementById('procedureIndex').value;
                procedures[index].type = document.getElementById('name').value;
                // Puedes actualizar los demás campos del procedimiento (student, deliveryDate, status) según sea necesario
                closeModal();
                showProcedures(); // Actualizar la lista después de guardar los detalles
            }

            function updateCheckbox(index) {
                procedures[index].checked = !procedures[index].checked;
                showProcedures(); // Actualizar la lista después de cambiar el estado del checkbox
            }

            function redirectToNewPage() {
                // Cambia la URL a la que quieres redirigir
                window.location.href = 'https://www.ejemplo.com/nueva-pagina';
            }

            showProcedures();
        </script>
    </main>
</body>
</html>
